# 创建月结卡号基础表，包含寄件月结卡号及寄件人手机号码；
# 若一个手机号码对应多个月结卡号（如员工跳槽换公司），取最新的月结卡号对应
# 寄付取寄件人号码，到付取收件人号码，月结类型的
set mapred.job.queue.name=next;
drop table if exists data_science.steven_monthly_code_tel_201701_07;
create table if not exists data_science.steven_monthly_code_tel_201701_07 stored as parquet  as
select s.monthly_code,s.tel
from
(
select a.monthly_code,a.consignor_phone tel,a.consigned_tm,
       row_number() over(partition by a.consignor_phone order by consigned_tm desc) rn
from data_science.steven_waybill_201701_07_waybill_complain1 a
where a.comb_payment_type_code='寄付月结' and  a.monthly_code is not null
      and consignor_phone is not null
union all
select a.monthly_code,a.consignee_phone tel,a.consigned_tm,
       row_number() over(partition by a.consignee_phone order by consigned_tm desc) rn
from data_science.steven_waybill_201701_07_waybill_complain1 a
where a.comb_payment_type_code='到付月结' and  a.monthly_code is not null
     and consignee_phone is not null
) s
where s.rn=1 and s.tel is not null  and upper(s.tel)<>'NULL'
group by s.monthly_code,s.tel;

# 去重，一个手机号只能对应一个月结卡号，存在一个公司多个月结卡号的情况，不影响
set mapred.job.queue.name=next;
drop table if exists data_science.steven_monthly_code_tel_201701_07_0;
create table if not exists data_science.steven_monthly_code_tel_201701_07_0 stored as parquet  as
select mm.monthly_code,mm.tel
from  (
select a.monthly_code,a.tel,row_number() over(partition by a.tel order by monthly_code desc) rn
from data_science.steven_monthly_code_tel_201701_07 a) mm
where mm.rn=1;



# 用运单表中的月结中的寄付月结关联，注意关联字段的选择
# 寄付月结，应该用收件人号码关联，获取收件人的类别（月结还是）
set mapred.job.queue.name=next;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm stored as parquet  as
select a.monthly_code send_code,a.waybill_no,a.consigned_tm,a.signin_tm,
       b.monthly_code receive_code,a.consignor_phone send_phone,a.consignee_phone receive_phone,a.cons_category
from
(
select monthly_code,waybill_no,consigned_tm,signin_tm,consignor_phone,cons_category,consignee_phone
from data_science.steven_waybill_201701_07_waybill_complain1
where monthly_code is not null and comb_payment_type_code='寄付月结'
) a left join
data_science.steven_monthly_code_tel_201701_07_0 b on a.consignee_phone=b.tel
where b.monthly_code is not null
group by a.monthly_code,a.waybill_no,a.consigned_tm,a.signin_tm,
       b.monthly_code,a.consignor_phone,a.consignee_phone,a.cons_category;

# 到付月结 ，应该用寄件人的号码关联，获取寄件人的类别（月结还是）
insert into 	data_science.steven_monthly_code_tel_201701_07_nm
select b.monthly_code send_code,a.waybill_no,a.consigned_tm,a.signin_tm,
       a.monthly_code receive_code,a.consignor_phone send_phone,a.consignee_phone receive_phone,a.cons_category
from
(
select monthly_code,waybill_no,consigned_tm,signin_tm,consignee_phone,cons_category,consignor_phone
from data_science.steven_waybill_201701_07_waybill_complain1
where monthly_code is not null and comb_payment_type_code='到付月结'
) a left join
data_science.steven_monthly_code_tel_201701_07_0 b on a.consignor_phone=b.tel
where b.monthly_code is not null
group by b.monthly_code,a.waybill_no,a.consigned_tm,a.signin_tm,
       a.monthly_code,a.consignor_phone,a.consignee_phone,a.cons_category;

# 汇聚成月结卡号的基表
set mapred.job.queue.name=next;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm1;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm1 stored as parquet  as
select send_code,receive_code,count(distinct waybill_no) waynm
from data_science.steven_monthly_code_tel_201701_07_nm
group by send_code,receive_code;

# 客户行业及名称 data_science.steven_waybill_201701_07_tmp031
set mapred.job.queue.name=next;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm21;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm21 stored as parquet  as
select aa.send_mark,aa.send_name,aa.send_indust,aa.send_code,
	   aa.receive_code,bb.customer_unique_mark receive_mark,bb.customer_name receive_name,industry_type_level1 receive_indust
	   ,aa.waynm
from
(
select b.customer_unique_mark send_mark,b.customer_name send_name,industry_type_level1 send_indust,
       a.send_code,a.receive_code,a.waynm
from  data_science.steven_monthly_code_tel_201701_07_nm1  a
left join data_science.steven_waybill_201701_07_tmp031 b on a.send_code=b.monthly_statement_account
where b.custtype='B' ) aa left join data_science.steven_waybill_201701_07_tmp031 bb on aa.receive_code=bb.monthly_statement_account
where bb.custtype='B';


# 各个客户的行业及名称及往来件量
set mapred.job.queue.name=next;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm31;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm31 stored as parquet  as
select aa.send_mark,aa.send_name,aa.send_indust,
       aa.receive_mark,aa.receive_name,aa.receive_indust,sum(aa.waynm) waynm
from   data_science.steven_monthly_code_tel_201701_07_nm21 aa
group by aa.send_mark,aa.send_name,aa.send_indust,
       aa.receive_mark,aa.receive_name,aa.receive_indust;

# 往来件量大于60的，且非顺丰的，排名前5的公司
set mapred.job.queue.name=next;
select a.*
from (
select a.*,row_number() over (partition by a.send_mark order by a.waynm desc ) rn
from data_science.steven_monthly_code_tel_201701_07_nm31 a
where a.send_mark<>a.receive_mark  and a.waynm>=60) a
where a.rn<=5 and a.send_name not like '%顺丰%' and a.receive_name not like '%顺丰%' ;


# 生成基础表（包含寄件时间的） 最基础的数据
set mapred.job.queue.name=o2o;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm41;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm41 stored as parquet  as
select aa.send_mark,aa.send_main_business,aa.send_overseas,
       aa.send_indust1,aa.send_indust2,aa.send_indust3,
	   aa.send_area_code,aa.send_cooperate,aa.send_code,
       aa.waybill_no,aa.consigned_tm,aa.signin_tm,aa.send_phone,aa.receive_phone,
	   bb.customer_unique_mark receive_mark,bb.main_business receive_main_business,bb.overseas_business receive_overseas,
       bb.industry_type_level1 receive_indust1,bb.industry_type_level2 receive_indust2,bb.industry_type_level3 receive_indust3,
	   bb.area_code receive_area_code,bb.cooperation_duration receive_cooperate,
	   aa.receive_code,

	   aa.cons_category
from
(
select b.customer_unique_mark send_mark,b.main_business send_main_business,b.overseas_business send_overseas,
       b.industry_type_level1 send_indust1,b.industry_type_level2 send_indust2,b.industry_type_level3 send_indust3,
	   b.area_code send_area_code,b.cooperation_duration send_cooperate,a.send_code,
       waybill_no,consigned_tm,signin_tm,send_phone,receive_phone,cons_category,receive_code
from  data_science.steven_monthly_code_tel_201701_07_nm  a
left join data_science.steven_cust_basicinfo b on a.send_code=b.monthly_statement_account
where b.cust_type='B' ) aa left join data_science.steven_cust_basicinfo bb on aa.receive_code=bb.monthly_statement_account
where bb.cust_type='B';

# 一个季度的数据
set mapred.job.queue.name=o2o;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm51;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm51 stored as parquet  as
select a.send_mark,a.send_main_business,a.send_overseas,
       a.send_indust1,a.send_indust2,a.send_indust3,
	   a.send_area_code,a.send_cooperate,
       a.waybill_no,a.consigned_tm,a.signin_tm,
	   a.receive_mark,a.receive_main_business,a.receive_overseas,
       a.receive_indust1,a.receive_indust2,a.receive_indust3,
	   a.receive_area_code,a.receive_cooperate,
	   a.cons_category
from
(
select a.send_mark,a.send_main_business,a.send_overseas,
       a.send_indust1,a.send_indust2,a.send_indust3,
	   a.send_area_code,a.send_cooperate,
       a.waybill_no,a.consigned_tm,a.signin_tm,
	   a.receive_mark,a.receive_main_business,a.receive_overseas,
       a.receive_indust1,a.receive_indust2,a.receive_indust3,
	   a.receive_area_code,a.receive_cooperate,
	   a.cons_category,row_number() over(partition by waybill_no order by consigned_tm asc) rn
from data_science.steven_monthly_code_tel_201701_07_nm41 a
where from_unixtime(unix_timestamp(a.consigned_tm),'yyyyMM')>=201704
and from_unixtime(unix_timestamp(a.consigned_tm),'yyyyMM')<=201706) a
where a.rn=1;


# 一个季度的数据 获取所属大区名称及城市名称
set mapred.job.queue.name=o2o;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm61;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm61 stored as parquet  as
select
       a.send_mark,a.send_main_business,a.send_overseas,
       a.send_indust1,a.send_indust2,a.send_indust3,
	   a.send_area_code,b.area_name send_area_name,b.city_name send_city_name,a.send_cooperate,
       a.waybill_no,a.consigned_tm,a.signin_tm,
	   a.receive_mark,a.receive_main_business,a.receive_overseas,
       a.receive_indust1,a.receive_indust2,a.receive_indust3,
	   a.receive_area_code,c.area_name receive_area_name,c.city_name receive_city_name,a.receive_cooperate,
	   a.cons_category
from data_science.steven_monthly_code_tel_201701_07_nm51 a left join
(
select dept_code,area_name,city_name
from gdl.zipper_dim_department
where area_name is not null and city_name is not null
group by dept_code,area_name,city_name) b on a.send_area_code=b.dept_code
left join
(
select dept_code,area_name,city_name
from gdl.zipper_dim_department
where area_name is not null and city_name is not null
group by dept_code,area_name,city_name) c on a.receive_area_code=c.dept_code;


set mapred.job.queue.name=o2o;
drop table if exists data_science.steven_monthly_code_tel_201701_07_nm71;
create table if not exists data_science.steven_monthly_code_tel_201701_07_nm71 stored as parquet  as
select m.send_mark,m.send_main_business,m.send_overseas,
       m.send_indust1,m.send_indust2,m.send_indust3,
	   m.send_area_code,m.send_area_name,m.send_city_name,m.send_cooperate,
       m.waybill_no,m.consigned_tm,m.signin_tm,
	   m.receive_mark,m.receive_main_business,m.receive_overseas,
       m.receive_indust1,m.receive_indust2,m.receive_indust3,
	   m.receive_area_code,m.receive_area_name,m.receive_city_name,m.receive_cooperate,
	   m.cons_category
from
(
select a.send_mark,a.send_main_business,a.send_overseas,
       a.send_indust1,a.send_indust2,a.send_indust3,
	   a.send_area_code,a.send_area_name,a.send_city_name,a.send_cooperate,
       a.waybill_no,a.consigned_tm,a.signin_tm,
	   a.receive_mark,a.receive_main_business,a.receive_overseas,
       a.receive_indust1,a.receive_indust2,a.receive_indust3,
	   a.receive_area_code,a.receive_area_name,a.receive_city_name,a.receive_cooperate,
	   a.cons_category,row_number() over(partition by a.waybill_no order by a.receive_area_name,a.receive_city_name) rn
from data_science.steven_monthly_code_tel_201701_07_nm61 a
) m where m.rn=1;


# 无向图基础数据
set mapreduce.job.queuename=o2o  ;
drop table if exists data_science.steven_monthly_code_tel_201701_07_wxt;
create table if not exists data_science.steven_monthly_code_tel_201701_07_wxt stored as parquet  as
select k.n1,concat_ws(' ',collect_set(k.n2)) contacts
from
(
select s.n1,s.n2
from
(
select concat('A',a.send_mark) n1,concat('A',a.receive_mark) n2
from data_science.steven_monthly_code_tel_201701_07_nm31 a
group by concat('A',a.send_mark) ,concat('A',a.receive_mark)
union all
select concat('A',a.receive_mark) n1,concat('A',a.send_mark) n2
from data_science.steven_monthly_code_tel_201701_07_nm31 a
group by concat('A',a.receive_mark),concat('A',a.send_mark)) s
group by s.n1,s.n2)  k
group by k.n1;


set mapreduce.job.queuename=o2o  ;
select concat('A',a.n1) n1,regexp_replace(a.contacts, ',', '、')
from data_science.steven_monthly_code_tel_201701_07_wxt a
limit 100;


# 20170416的月结卡号对应的客户名称
drop table if exists data_science.steven_monthly_code_tel_20170416_cust_name;
create table if not exists data_science.steven_monthly_code_tel_20170416_cust_name stored as parquet  as
select c.mark,c.customer_name
from
(
select aa.mark,bb.customer_name,row_number() over(partition by aa.mark order by bb.customer_name ) rn
from
(
select m.mark
from
(
select a.send_mark mark
from  data_science.zyf_monthly_code_tel_20170416 a
union all
select a.receive_mark mark
from  data_science.zyf_monthly_code_tel_20170416 a ) m
group by m.mark ) aa left join
(select b.customer_unique_mark mark,b.customer_name
from cmdp.cmdp_customer_b b where b.inc_month>=201704) bb on aa.mark=bb.mark) c
where c.rn=1
;
